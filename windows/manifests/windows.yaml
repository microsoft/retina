apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: retina
  name: retina-win
  namespace: kube-system
  annotations:
    prometheus.io/port: "10093"
    prometheus.io/scrape: "true"
spec:
  selector:
    matchLabels:
      app: retina
  template:
    metadata:
      labels:
        app: retina
      name: retina
      namespace: retina
    spec:
      serviceAccountName: retina-agent
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
        runAsNonRoot: false
      hostNetwork: true
      containers:
        - name: retinawin
          image: ghcr.io/microsoft/retina/retina-agent:v0.0.1-pre
          ports:
            - containerPort: 10093
          command:
            - powershell.exe
            - -command
            {{- if semverCompare ">=1.28" .Capabilities.KubeVersion.GitVersion }}
            - $env:CONTAINER_SANDBOX_MOUNT_POINT/controller.exe --config ./retina/config.yaml
            {{- else }}
            - .\setkubeconfigpath.ps1; ./controller.exe --config ./retina/config.yaml --kubeconfig ./kubeconfig
            {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: retina-config-win
              mountPath: retina
      nodeSelector:
        kubernetes.io/os: windows
      volumes:
        - name: retina-config-win
          configMap:
            name: retina-config-win
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: retina-config-win
  namespace: kube-system
data:
  config.yaml: |-
    apiServer:
      host: "0.0.0.0"
      port: 10093
    logLevel: info
    enabledPlugin: ["hnsstats"] 
    metricsIntervalDuration: "10s"
