name: golangci-lint
on:
  merge_group:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  golangci:
    strategy:
      fail-fast: false
      matrix:
        goos: ["linux", "windows"]
        goarch: ["amd64", "arm64"]
    name: Lint
    runs-on: ubuntu-latest
    env:
      IS_NOT_MERGE_GROUP: ${{ github.event_name != 'merge_group' }}
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - uses: actions/checkout@v4
        if: env.IS_NOT_MERGE_GROUP
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        if: env.IS_NOT_MERGE_GROUP
        with:
          go-version-file: go.mod
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: install dependencies and generate
        if: env.IS_NOT_MERGE_GROUP && matrix.goos == 'linux'
        run: |
          export GOARCH=${{ matrix.goarch }}
          sudo apt-get update
          sudo apt-get install -y curl lsb-release wget software-properties-common gnupg make git clang-14 lldb-14 lld-14 clangd-14 man-db
          export LLVM_VERSION=14
          curl -sL https://apt.llvm.org/llvm.sh  | sudo bash -s "$LLVM_VERSION"
          export PATH=$PATH:/usr/lib/llvm-$LLVM_VERSION/bin
          CGO_ENABLED=0 GOARCH=${{ matrix.goarch }} go generate ./pkg/plugin/...;
      - name: golangci-lint
        if: env.IS_NOT_MERGE_GROUP
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55
          args: --concurrency 4 --verbose --config=.golangci.yaml --timeout=25m
          only-new-issues: true
          skip-cache: true
