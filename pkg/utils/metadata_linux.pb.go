// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: metadata_linux.proto

package utils

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DNSType int32

const (
	DNSType_UNKNOWN  DNSType = 0
	DNSType_QUERY    DNSType = 1
	DNSType_RESPONSE DNSType = 2
)

// Enum value maps for DNSType.
var (
	DNSType_name = map[int32]string{
		0: "UNKNOWN",
		1: "QUERY",
		2: "RESPONSE",
	}
	DNSType_value = map[string]int32{
		"UNKNOWN":  0,
		"QUERY":    1,
		"RESPONSE": 2,
	}
)

func (x DNSType) Enum() *DNSType {
	p := new(DNSType)
	*p = x
	return p
}

func (x DNSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DNSType) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_linux_proto_enumTypes[0].Descriptor()
}

func (DNSType) Type() protoreflect.EnumType {
	return &file_metadata_linux_proto_enumTypes[0]
}

func (x DNSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DNSType.Descriptor instead.
func (DNSType) EnumDescriptor() ([]byte, []int) {
	return file_metadata_linux_proto_rawDescGZIP(), []int{0}
}

//Ref: https://elixir.bootlin.com/linux/v6.6.36/source/include/net/dropreason-core.h
type DropReason int32

const (
	DropReason_SKB_NOT_DROPPED_YET                     DropReason = 0
	DropReason_SKB_CONSUMED                            DropReason = 1
	DropReason_SKB_DROP_REASON_NOT_SPECIFIED           DropReason = 2
	DropReason_SKB_DROP_REASON_NO_SOCKET               DropReason = 3
	DropReason_SKB_DROP_REASON_PKT_TOO_SMALL           DropReason = 4
	DropReason_SKB_DROP_REASON_TCP_CSUM                DropReason = 5
	DropReason_SKB_DROP_REASON_SOCKET_FILTER           DropReason = 6
	DropReason_SKB_DROP_REASON_UDP_CSUM                DropReason = 7
	DropReason_SKB_DROP_REASON_NETFILTER_DROP          DropReason = 8
	DropReason_SKB_DROP_REASON_OTHERHOST               DropReason = 9
	DropReason_SKB_DROP_REASON_IP_CSUM                 DropReason = 10
	DropReason_SKB_DROP_REASON_IP_INHDR                DropReason = 11
	DropReason_SKB_DROP_REASON_IP_RPFILTER             DropReason = 12
	DropReason_SKB_DROP_REASON_UNICAST_IN_L2_MULTICAST DropReason = 13
	DropReason_SKB_DROP_REASON_XFRM_POLICY             DropReason = 14
	DropReason_SKB_DROP_REASON_IP_NOPROTO              DropReason = 15
	DropReason_SKB_DROP_REASON_SOCKET_RCVBUFF          DropReason = 16
	DropReason_SKB_DROP_REASON_PROTO_MEM               DropReason = 17
	DropReason_SKB_DROP_REASON_TCP_MD5NOTFOUND         DropReason = 18
	DropReason_SKB_DROP_REASON_TCP_MD5UNEXPECTED       DropReason = 19
	DropReason_SKB_DROP_REASON_TCP_MD5FAILURE          DropReason = 20
	DropReason_SKB_DROP_REASON_SOCKET_BACKLOG          DropReason = 21
	DropReason_SKB_DROP_REASON_TCP_FLAGS               DropReason = 22
	DropReason_SKB_DROP_REASON_TCP_ZEROWINDOW          DropReason = 23
	DropReason_SKB_DROP_REASON_TCP_OLD_DATA            DropReason = 24
	DropReason_SKB_DROP_REASON_TCP_OVERWINDOW          DropReason = 25
	DropReason_SKB_DROP_REASON_TCP_OFOMERGE            DropReason = 26
	DropReason_SKB_DROP_REASON_TCP_RFC7323_PAWS        DropReason = 27
	DropReason_SKB_DROP_REASON_TCP_OLD_SEQUENCE        DropReason = 28
	DropReason_SKB_DROP_REASON_TCP_INVALID_SEQUENCE    DropReason = 29
	DropReason_SKB_DROP_REASON_TCP_RESET               DropReason = 30
	DropReason_SKB_DROP_REASON_TCP_INVALID_SYN         DropReason = 31
	DropReason_SKB_DROP_REASON_TCP_CLOSE               DropReason = 32
	DropReason_SKB_DROP_REASON_TCP_FASTOPEN            DropReason = 33
	DropReason_SKB_DROP_REASON_TCP_OLD_ACK             DropReason = 34
	DropReason_SKB_DROP_REASON_TCP_TOO_OLD_ACK         DropReason = 35
	DropReason_SKB_DROP_REASON_TCP_ACK_UNSENT_DATA     DropReason = 36
	DropReason_SKB_DROP_REASON_TCP_OFO_QUEUE_PRUNE     DropReason = 37
	DropReason_SKB_DROP_REASON_TCP_OFO_DROP            DropReason = 38
	DropReason_SKB_DROP_REASON_IP_OUTNOROUTES          DropReason = 39
	DropReason_SKB_DROP_REASON_BPF_CGROUP_EGRESS       DropReason = 40
	DropReason_SKB_DROP_REASON_IPV6DISABLED            DropReason = 41
	DropReason_SKB_DROP_REASON_NEIGH_CREATEFAIL        DropReason = 42
	DropReason_SKB_DROP_REASON_NEIGH_FAILED            DropReason = 43
	DropReason_SKB_DROP_REASON_NEIGH_QUEUEFULL         DropReason = 44
	DropReason_SKB_DROP_REASON_NEIGH_DEAD              DropReason = 45
	DropReason_SKB_DROP_REASON_TC_EGRESS               DropReason = 46
	DropReason_SKB_DROP_REASON_QDISC_DROP              DropReason = 47
	DropReason_SKB_DROP_REASON_CPU_BACKLOG             DropReason = 48
	DropReason_SKB_DROP_REASON_XDP                     DropReason = 49
	DropReason_SKB_DROP_REASON_TC_INGRESS              DropReason = 50
	DropReason_SKB_DROP_REASON_UNHANDLED_PROTO         DropReason = 51
	DropReason_SKB_DROP_REASON_SKB_CSUM                DropReason = 52
	DropReason_SKB_DROP_REASON_SKB_GSO_SEG             DropReason = 53
	DropReason_SKB_DROP_REASON_SKB_UCOPY_FAULT         DropReason = 54
	DropReason_SKB_DROP_REASON_DEV_HDR                 DropReason = 55
	DropReason_SKB_DROP_REASON_DEV_READY               DropReason = 56
	DropReason_SKB_DROP_REASON_FULL_RING               DropReason = 57
	DropReason_SKB_DROP_REASON_NOMEM                   DropReason = 58
	DropReason_SKB_DROP_REASON_HDR_TRUNC               DropReason = 59
	DropReason_SKB_DROP_REASON_TAP_FILTER              DropReason = 60
	DropReason_SKB_DROP_REASON_TAP_TXFILTER            DropReason = 61
	DropReason_SKB_DROP_REASON_ICMP_CSUM               DropReason = 62
	DropReason_SKB_DROP_REASON_INVALID_PROTO           DropReason = 63
	DropReason_SKB_DROP_REASON_IP_INADDRERRORS         DropReason = 64
	DropReason_SKB_DROP_REASON_IP_INNOROUTES           DropReason = 65
	DropReason_SKB_DROP_REASON_PKT_TOO_BIG             DropReason = 66
	DropReason_SKB_DROP_REASON_DUP_FRAG                DropReason = 67
	DropReason_SKB_DROP_REASON_FRAG_REASM_TIMEOUT      DropReason = 68
	DropReason_SKB_DROP_REASON_FRAG_TOO_FAR            DropReason = 69
	DropReason_SKB_DROP_REASON_TCP_MINTTL              DropReason = 70
	DropReason_SKB_DROP_REASON_IPV6_BAD_EXTHDR         DropReason = 71
	DropReason_SKB_DROP_REASON_IPV6_NDISC_FRAG         DropReason = 72
	DropReason_SKB_DROP_REASON_IPV6_NDISC_HOP_LIMIT    DropReason = 73
	DropReason_SKB_DROP_REASON_IPV6_NDISC_BAD_CODE     DropReason = 74
	DropReason_SKB_DROP_REASON_IPV6_NDISC_BAD_OPTIONS  DropReason = 75
	DropReason_SKB_DROP_REASON_IPV6_NDISC_NS_OTHERHOST DropReason = 76
	DropReason_SKB_DROP_REASON_QUEUE_PURGE             DropReason = 77
	DropReason_SKB_DROP_REASON_MAX                     DropReason = 78
)

// Enum value maps for DropReason.
var (
	DropReason_name = map[int32]string{
		0:  "SKB_NOT_DROPPED_YET",
		1:  "SKB_CONSUMED",
		2:  "SKB_DROP_REASON_NOT_SPECIFIED",
		3:  "SKB_DROP_REASON_NO_SOCKET",
		4:  "SKB_DROP_REASON_PKT_TOO_SMALL",
		5:  "SKB_DROP_REASON_TCP_CSUM",
		6:  "SKB_DROP_REASON_SOCKET_FILTER",
		7:  "SKB_DROP_REASON_UDP_CSUM",
		8:  "SKB_DROP_REASON_NETFILTER_DROP",
		9:  "SKB_DROP_REASON_OTHERHOST",
		10: "SKB_DROP_REASON_IP_CSUM",
		11: "SKB_DROP_REASON_IP_INHDR",
		12: "SKB_DROP_REASON_IP_RPFILTER",
		13: "SKB_DROP_REASON_UNICAST_IN_L2_MULTICAST",
		14: "SKB_DROP_REASON_XFRM_POLICY",
		15: "SKB_DROP_REASON_IP_NOPROTO",
		16: "SKB_DROP_REASON_SOCKET_RCVBUFF",
		17: "SKB_DROP_REASON_PROTO_MEM",
		18: "SKB_DROP_REASON_TCP_MD5NOTFOUND",
		19: "SKB_DROP_REASON_TCP_MD5UNEXPECTED",
		20: "SKB_DROP_REASON_TCP_MD5FAILURE",
		21: "SKB_DROP_REASON_SOCKET_BACKLOG",
		22: "SKB_DROP_REASON_TCP_FLAGS",
		23: "SKB_DROP_REASON_TCP_ZEROWINDOW",
		24: "SKB_DROP_REASON_TCP_OLD_DATA",
		25: "SKB_DROP_REASON_TCP_OVERWINDOW",
		26: "SKB_DROP_REASON_TCP_OFOMERGE",
		27: "SKB_DROP_REASON_TCP_RFC7323_PAWS",
		28: "SKB_DROP_REASON_TCP_OLD_SEQUENCE",
		29: "SKB_DROP_REASON_TCP_INVALID_SEQUENCE",
		30: "SKB_DROP_REASON_TCP_RESET",
		31: "SKB_DROP_REASON_TCP_INVALID_SYN",
		32: "SKB_DROP_REASON_TCP_CLOSE",
		33: "SKB_DROP_REASON_TCP_FASTOPEN",
		34: "SKB_DROP_REASON_TCP_OLD_ACK",
		35: "SKB_DROP_REASON_TCP_TOO_OLD_ACK",
		36: "SKB_DROP_REASON_TCP_ACK_UNSENT_DATA",
		37: "SKB_DROP_REASON_TCP_OFO_QUEUE_PRUNE",
		38: "SKB_DROP_REASON_TCP_OFO_DROP",
		39: "SKB_DROP_REASON_IP_OUTNOROUTES",
		40: "SKB_DROP_REASON_BPF_CGROUP_EGRESS",
		41: "SKB_DROP_REASON_IPV6DISABLED",
		42: "SKB_DROP_REASON_NEIGH_CREATEFAIL",
		43: "SKB_DROP_REASON_NEIGH_FAILED",
		44: "SKB_DROP_REASON_NEIGH_QUEUEFULL",
		45: "SKB_DROP_REASON_NEIGH_DEAD",
		46: "SKB_DROP_REASON_TC_EGRESS",
		47: "SKB_DROP_REASON_QDISC_DROP",
		48: "SKB_DROP_REASON_CPU_BACKLOG",
		49: "SKB_DROP_REASON_XDP",
		50: "SKB_DROP_REASON_TC_INGRESS",
		51: "SKB_DROP_REASON_UNHANDLED_PROTO",
		52: "SKB_DROP_REASON_SKB_CSUM",
		53: "SKB_DROP_REASON_SKB_GSO_SEG",
		54: "SKB_DROP_REASON_SKB_UCOPY_FAULT",
		55: "SKB_DROP_REASON_DEV_HDR",
		56: "SKB_DROP_REASON_DEV_READY",
		57: "SKB_DROP_REASON_FULL_RING",
		58: "SKB_DROP_REASON_NOMEM",
		59: "SKB_DROP_REASON_HDR_TRUNC",
		60: "SKB_DROP_REASON_TAP_FILTER",
		61: "SKB_DROP_REASON_TAP_TXFILTER",
		62: "SKB_DROP_REASON_ICMP_CSUM",
		63: "SKB_DROP_REASON_INVALID_PROTO",
		64: "SKB_DROP_REASON_IP_INADDRERRORS",
		65: "SKB_DROP_REASON_IP_INNOROUTES",
		66: "SKB_DROP_REASON_PKT_TOO_BIG",
		67: "SKB_DROP_REASON_DUP_FRAG",
		68: "SKB_DROP_REASON_FRAG_REASM_TIMEOUT",
		69: "SKB_DROP_REASON_FRAG_TOO_FAR",
		70: "SKB_DROP_REASON_TCP_MINTTL",
		71: "SKB_DROP_REASON_IPV6_BAD_EXTHDR",
		72: "SKB_DROP_REASON_IPV6_NDISC_FRAG",
		73: "SKB_DROP_REASON_IPV6_NDISC_HOP_LIMIT",
		74: "SKB_DROP_REASON_IPV6_NDISC_BAD_CODE",
		75: "SKB_DROP_REASON_IPV6_NDISC_BAD_OPTIONS",
		76: "SKB_DROP_REASON_IPV6_NDISC_NS_OTHERHOST",
		77: "SKB_DROP_REASON_QUEUE_PURGE",
		78: "SKB_DROP_REASON_MAX",
	}
	DropReason_value = map[string]int32{
		"SKB_NOT_DROPPED_YET":                     0,
		"SKB_CONSUMED":                            1,
		"SKB_DROP_REASON_NOT_SPECIFIED":           2,
		"SKB_DROP_REASON_NO_SOCKET":               3,
		"SKB_DROP_REASON_PKT_TOO_SMALL":           4,
		"SKB_DROP_REASON_TCP_CSUM":                5,
		"SKB_DROP_REASON_SOCKET_FILTER":           6,
		"SKB_DROP_REASON_UDP_CSUM":                7,
		"SKB_DROP_REASON_NETFILTER_DROP":          8,
		"SKB_DROP_REASON_OTHERHOST":               9,
		"SKB_DROP_REASON_IP_CSUM":                 10,
		"SKB_DROP_REASON_IP_INHDR":                11,
		"SKB_DROP_REASON_IP_RPFILTER":             12,
		"SKB_DROP_REASON_UNICAST_IN_L2_MULTICAST": 13,
		"SKB_DROP_REASON_XFRM_POLICY":             14,
		"SKB_DROP_REASON_IP_NOPROTO":              15,
		"SKB_DROP_REASON_SOCKET_RCVBUFF":          16,
		"SKB_DROP_REASON_PROTO_MEM":               17,
		"SKB_DROP_REASON_TCP_MD5NOTFOUND":         18,
		"SKB_DROP_REASON_TCP_MD5UNEXPECTED":       19,
		"SKB_DROP_REASON_TCP_MD5FAILURE":          20,
		"SKB_DROP_REASON_SOCKET_BACKLOG":          21,
		"SKB_DROP_REASON_TCP_FLAGS":               22,
		"SKB_DROP_REASON_TCP_ZEROWINDOW":          23,
		"SKB_DROP_REASON_TCP_OLD_DATA":            24,
		"SKB_DROP_REASON_TCP_OVERWINDOW":          25,
		"SKB_DROP_REASON_TCP_OFOMERGE":            26,
		"SKB_DROP_REASON_TCP_RFC7323_PAWS":        27,
		"SKB_DROP_REASON_TCP_OLD_SEQUENCE":        28,
		"SKB_DROP_REASON_TCP_INVALID_SEQUENCE":    29,
		"SKB_DROP_REASON_TCP_RESET":               30,
		"SKB_DROP_REASON_TCP_INVALID_SYN":         31,
		"SKB_DROP_REASON_TCP_CLOSE":               32,
		"SKB_DROP_REASON_TCP_FASTOPEN":            33,
		"SKB_DROP_REASON_TCP_OLD_ACK":             34,
		"SKB_DROP_REASON_TCP_TOO_OLD_ACK":         35,
		"SKB_DROP_REASON_TCP_ACK_UNSENT_DATA":     36,
		"SKB_DROP_REASON_TCP_OFO_QUEUE_PRUNE":     37,
		"SKB_DROP_REASON_TCP_OFO_DROP":            38,
		"SKB_DROP_REASON_IP_OUTNOROUTES":          39,
		"SKB_DROP_REASON_BPF_CGROUP_EGRESS":       40,
		"SKB_DROP_REASON_IPV6DISABLED":            41,
		"SKB_DROP_REASON_NEIGH_CREATEFAIL":        42,
		"SKB_DROP_REASON_NEIGH_FAILED":            43,
		"SKB_DROP_REASON_NEIGH_QUEUEFULL":         44,
		"SKB_DROP_REASON_NEIGH_DEAD":              45,
		"SKB_DROP_REASON_TC_EGRESS":               46,
		"SKB_DROP_REASON_QDISC_DROP":              47,
		"SKB_DROP_REASON_CPU_BACKLOG":             48,
		"SKB_DROP_REASON_XDP":                     49,
		"SKB_DROP_REASON_TC_INGRESS":              50,
		"SKB_DROP_REASON_UNHANDLED_PROTO":         51,
		"SKB_DROP_REASON_SKB_CSUM":                52,
		"SKB_DROP_REASON_SKB_GSO_SEG":             53,
		"SKB_DROP_REASON_SKB_UCOPY_FAULT":         54,
		"SKB_DROP_REASON_DEV_HDR":                 55,
		"SKB_DROP_REASON_DEV_READY":               56,
		"SKB_DROP_REASON_FULL_RING":               57,
		"SKB_DROP_REASON_NOMEM":                   58,
		"SKB_DROP_REASON_HDR_TRUNC":               59,
		"SKB_DROP_REASON_TAP_FILTER":              60,
		"SKB_DROP_REASON_TAP_TXFILTER":            61,
		"SKB_DROP_REASON_ICMP_CSUM":               62,
		"SKB_DROP_REASON_INVALID_PROTO":           63,
		"SKB_DROP_REASON_IP_INADDRERRORS":         64,
		"SKB_DROP_REASON_IP_INNOROUTES":           65,
		"SKB_DROP_REASON_PKT_TOO_BIG":             66,
		"SKB_DROP_REASON_DUP_FRAG":                67,
		"SKB_DROP_REASON_FRAG_REASM_TIMEOUT":      68,
		"SKB_DROP_REASON_FRAG_TOO_FAR":            69,
		"SKB_DROP_REASON_TCP_MINTTL":              70,
		"SKB_DROP_REASON_IPV6_BAD_EXTHDR":         71,
		"SKB_DROP_REASON_IPV6_NDISC_FRAG":         72,
		"SKB_DROP_REASON_IPV6_NDISC_HOP_LIMIT":    73,
		"SKB_DROP_REASON_IPV6_NDISC_BAD_CODE":     74,
		"SKB_DROP_REASON_IPV6_NDISC_BAD_OPTIONS":  75,
		"SKB_DROP_REASON_IPV6_NDISC_NS_OTHERHOST": 76,
		"SKB_DROP_REASON_QUEUE_PURGE":             77,
		"SKB_DROP_REASON_MAX":                     78,
	}
)

func (x DropReason) Enum() *DropReason {
	p := new(DropReason)
	*p = x
	return p
}

func (x DropReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropReason) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_linux_proto_enumTypes[1].Descriptor()
}

func (DropReason) Type() protoreflect.EnumType {
	return &file_metadata_linux_proto_enumTypes[1]
}

func (x DropReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropReason.Descriptor instead.
func (DropReason) EnumDescriptor() ([]byte, []int) {
	return file_metadata_linux_proto_rawDescGZIP(), []int{1}
}

type RetinaMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes uint64 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	// DNS metadata.
	DnsType      DNSType `protobuf:"varint,2,opt,name=dns_type,json=dnsType,proto3,enum=utils.DNSType" json:"dns_type,omitempty"`
	NumResponses uint32  `protobuf:"varint,3,opt,name=num_responses,json=numResponses,proto3" json:"num_responses,omitempty"`
	// TCP ID. Either Tsval or Tsecr will be set.
	TcpId uint64 `protobuf:"varint,4,opt,name=tcp_id,json=tcpId,proto3" json:"tcp_id,omitempty"`
	// Drop reason in Retina.
	DropReason DropReason `protobuf:"varint,5,opt,name=drop_reason,json=dropReason,proto3,enum=utils.DropReason" json:"drop_reason,omitempty"`
}

func (x *RetinaMetadata) Reset() {
	*x = RetinaMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_linux_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetinaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetinaMetadata) ProtoMessage() {}

func (x *RetinaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_linux_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetinaMetadata.ProtoReflect.Descriptor instead.
func (*RetinaMetadata) Descriptor() ([]byte, []int) {
	return file_metadata_linux_proto_rawDescGZIP(), []int{0}
}

func (x *RetinaMetadata) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *RetinaMetadata) GetDnsType() DNSType {
	if x != nil {
		return x.DnsType
	}
	return DNSType_UNKNOWN
}

func (x *RetinaMetadata) GetNumResponses() uint32 {
	if x != nil {
		return x.NumResponses
	}
	return 0
}

func (x *RetinaMetadata) GetTcpId() uint64 {
	if x != nil {
		return x.TcpId
	}
	return 0
}

func (x *RetinaMetadata) GetDropReason() DropReason {
	if x != nil {
		return x.DropReason
	}
	return DropReason_SKB_NOT_DROPPED_YET
}

var File_metadata_linux_proto protoreflect.FileDescriptor

var file_metadata_linux_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x6e, 0x75, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x22, 0xc1, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x74, 0x69, 0x6e, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x44, 0x4e, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x63, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x63, 0x70, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x0b, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x2a, 0x2f, 0x0a, 0x07, 0x44, 0x4e, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x02, 0x2a, 0x95, 0x15, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4b, 0x42, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x50, 0x45, 0x44, 0x5f, 0x59, 0x45, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4b,
	0x42, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x21,
	0x0a, 0x1d, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x50, 0x4b, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10,
	0x04, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x43, 0x53, 0x55, 0x4d, 0x10, 0x05, 0x12,
	0x21, 0x0a, 0x1d, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x44, 0x50, 0x5f, 0x43, 0x53, 0x55, 0x4d, 0x10, 0x07,
	0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x54, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x48, 0x4f, 0x53,
	0x54, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x5f, 0x43, 0x53, 0x55, 0x4d, 0x10, 0x0a,
	0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x5f, 0x49, 0x4e, 0x48, 0x44, 0x52, 0x10, 0x0b, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x49, 0x50, 0x5f, 0x52, 0x50, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x10, 0x0c, 0x12,
	0x2b, 0x0a, 0x27, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x4c, 0x32,
	0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10, 0x0d, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x58, 0x46, 0x52, 0x4d, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x0e, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x0f, 0x12, 0x22, 0x0a,
	0x1e, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x52, 0x43, 0x56, 0x42, 0x55, 0x46, 0x46, 0x10,
	0x10, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4d, 0x45, 0x4d, 0x10, 0x11,
	0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4d, 0x44, 0x35, 0x4e, 0x4f, 0x54, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x12, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4d, 0x44, 0x35,
	0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x13, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x54, 0x43, 0x50, 0x5f, 0x4d, 0x44, 0x35, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x14,
	0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4c,
	0x4f, 0x47, 0x10, 0x15, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x46, 0x4c, 0x41, 0x47,
	0x53, 0x10, 0x16, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x5a, 0x45, 0x52, 0x4f, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x17, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4f,
	0x4c, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x18, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4b, 0x42,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50,
	0x5f, 0x4f, 0x56, 0x45, 0x52, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x19, 0x12, 0x20, 0x0a,
	0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4f, 0x46, 0x4f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x10, 0x1a, 0x12,
	0x24, 0x0a, 0x20, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x52, 0x46, 0x43, 0x37, 0x33, 0x32, 0x33, 0x5f, 0x50,
	0x41, 0x57, 0x53, 0x10, 0x1b, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4f, 0x4c, 0x44,
	0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x1c, 0x12, 0x28, 0x0a, 0x24, 0x53,
	0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54,
	0x43, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45,
	0x4e, 0x43, 0x45, 0x10, 0x1d, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x10, 0x1e, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x10, 0x1f, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x20, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f,
	0x46, 0x41, 0x53, 0x54, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x21, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4b,
	0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43,
	0x50, 0x5f, 0x4f, 0x4c, 0x44, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x22, 0x12, 0x23, 0x0a, 0x1f, 0x53,
	0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54,
	0x43, 0x50, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4f, 0x4c, 0x44, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x23,
	0x12, 0x27, 0x0a, 0x23, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x45,
	0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x24, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x4b, 0x42,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50,
	0x5f, 0x4f, 0x46, 0x4f, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x50, 0x52, 0x55, 0x4e, 0x45,
	0x10, 0x25, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x4f, 0x46, 0x4f, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x10, 0x26, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x5f, 0x4f, 0x55, 0x54, 0x4e, 0x4f,
	0x52, 0x4f, 0x55, 0x54, 0x45, 0x53, 0x10, 0x27, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x4b, 0x42, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x42, 0x50, 0x46, 0x5f,
	0x43, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x28, 0x12,
	0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x29, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x2a, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x49, 0x47, 0x48,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x2b, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x49,
	0x47, 0x48, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x2c, 0x12, 0x1e,
	0x0a, 0x1a, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x4e, 0x45, 0x49, 0x47, 0x48, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x10, 0x2d, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x54, 0x43, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x2e, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x51, 0x44, 0x49, 0x53, 0x43, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x2f, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x43, 0x50, 0x55, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x4c, 0x4f, 0x47, 0x10, 0x30, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x58, 0x44, 0x50, 0x10, 0x31, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43, 0x5f, 0x49, 0x4e,
	0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x32, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x48, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x33, 0x12, 0x1c, 0x0a, 0x18,
	0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x53, 0x4b, 0x42, 0x5f, 0x43, 0x53, 0x55, 0x4d, 0x10, 0x34, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4b,
	0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x4b,
	0x42, 0x5f, 0x47, 0x53, 0x4f, 0x5f, 0x53, 0x45, 0x47, 0x10, 0x35, 0x12, 0x23, 0x0a, 0x1f, 0x53,
	0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53,
	0x4b, 0x42, 0x5f, 0x55, 0x43, 0x4f, 0x50, 0x59, 0x5f, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x36,
	0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x56, 0x5f, 0x48, 0x44, 0x52, 0x10, 0x37, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x56, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x38, 0x12, 0x1d, 0x0a, 0x19,
	0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x39, 0x12, 0x19, 0x0a, 0x15, 0x53,
	0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x4d, 0x45, 0x4d, 0x10, 0x3a, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x48, 0x44, 0x52, 0x5f, 0x54, 0x52,
	0x55, 0x4e, 0x43, 0x10, 0x3b, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x50, 0x5f, 0x46, 0x49, 0x4c,
	0x54, 0x45, 0x52, 0x10, 0x3c, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f,
	0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x50, 0x5f, 0x54, 0x58, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x10, 0x3d, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x43, 0x4d, 0x50, 0x5f,
	0x43, 0x53, 0x55, 0x4d, 0x10, 0x3e, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52,
	0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x10, 0x3f, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42,
	0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x5f,
	0x49, 0x4e, 0x41, 0x44, 0x44, 0x52, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x40, 0x12, 0x21,
	0x0a, 0x1d, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x49, 0x50, 0x5f, 0x49, 0x4e, 0x4e, 0x4f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x53, 0x10,
	0x41, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x50, 0x4b, 0x54, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x42, 0x49, 0x47,
	0x10, 0x42, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x55, 0x50, 0x5f, 0x46, 0x52, 0x41, 0x47, 0x10, 0x43,
	0x12, 0x26, 0x0a, 0x22, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x41, 0x47, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4d, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x44, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x4b, 0x42, 0x5f,
	0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x46, 0x52, 0x41, 0x47,
	0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x46, 0x41, 0x52, 0x10, 0x45, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x4b,
	0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x43,
	0x50, 0x5f, 0x4d, 0x49, 0x4e, 0x54, 0x54, 0x4c, 0x10, 0x46, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x4b,
	0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50,
	0x56, 0x36, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x45, 0x58, 0x54, 0x48, 0x44, 0x52, 0x10, 0x47, 0x12,
	0x23, 0x0a, 0x1f, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4e, 0x44, 0x49, 0x53, 0x43, 0x5f, 0x46, 0x52,
	0x41, 0x47, 0x10, 0x48, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4e, 0x44, 0x49,
	0x53, 0x43, 0x5f, 0x48, 0x4f, 0x50, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x49, 0x12, 0x27,
	0x0a, 0x23, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4e, 0x44, 0x49, 0x53, 0x43, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x4a, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x4b, 0x42, 0x5f, 0x44,
	0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f,
	0x4e, 0x44, 0x49, 0x53, 0x43, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x10, 0x4b, 0x12, 0x2b, 0x0a, 0x27, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x4e, 0x44, 0x49, 0x53,
	0x43, 0x5f, 0x4e, 0x53, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x4c,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x50, 0x55, 0x52, 0x47, 0x45, 0x10,
	0x4d, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4b, 0x42, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x4e, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f,
	0x66, 0x74, 0x2f, 0x72, 0x65, 0x74, 0x69, 0x6e, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metadata_linux_proto_rawDescOnce sync.Once
	file_metadata_linux_proto_rawDescData = file_metadata_linux_proto_rawDesc
)

func file_metadata_linux_proto_rawDescGZIP() []byte {
	file_metadata_linux_proto_rawDescOnce.Do(func() {
		file_metadata_linux_proto_rawDescData = protoimpl.X.CompressGZIP(file_metadata_linux_proto_rawDescData)
	})
	return file_metadata_linux_proto_rawDescData
}

var file_metadata_linux_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_metadata_linux_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_metadata_linux_proto_goTypes = []interface{}{
	(DNSType)(0),           // 0: utils.DNSType
	(DropReason)(0),        // 1: utils.DropReason
	(*RetinaMetadata)(nil), // 2: utils.RetinaMetadata
}
var file_metadata_linux_proto_depIdxs = []int32{
	0, // 0: utils.RetinaMetadata.dns_type:type_name -> utils.DNSType
	1, // 1: utils.RetinaMetadata.drop_reason:type_name -> utils.DropReason
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_metadata_linux_proto_init() }
func file_metadata_linux_proto_init() {
	if File_metadata_linux_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metadata_linux_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetinaMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metadata_linux_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metadata_linux_proto_goTypes,
		DependencyIndexes: file_metadata_linux_proto_depIdxs,
		EnumInfos:         file_metadata_linux_proto_enumTypes,
		MessageInfos:      file_metadata_linux_proto_msgTypes,
	}.Build()
	File_metadata_linux_proto = out.File
	file_metadata_linux_proto_rawDesc = nil
	file_metadata_linux_proto_goTypes = nil
	file_metadata_linux_proto_depIdxs = nil
}
