{{- if .Values.operator.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: retina-operator
  namespace: kube-system
  labels:
    app: retina-operator
    control-plane: retina-operator
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: retina-operator
    app.kubernetes.io/component: retina-operator
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/part-of: operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: retina-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: retina-operator
      labels:
        app: retina-operator
        control-plane: retina-operator
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      #- arm64
                      #- ppc64le
                      #- s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                      #- windows
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
            - /retina-operator
          image: {{ .Values.operator.repository }}:{{ .Values.operator.tag }}
          name: retina-operator
          volumeMounts:
            - name: retina-operator-config
              mountPath: /retina/
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
      serviceAccountName: retina-operator
      terminationGracePeriodSeconds: 10
      volumes:
        - name: retina-operator-config
          configMap:
            name: retina-operator-config

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/instance: retina-operator
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/part-of: operator
    app.kubernetes.io/managed-by: kustomize
  name: retina-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: retina-operator-role
rules:
  - apiGroups: 
      - "apiextensions.k8s.io"
    resources: 
      - "customresourcedefinitions"
    verbs: 
      - "create"
      - "get"
      - "update"
      - "delete"
      - "patch"
  - apiGroups:
    - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - retina.sh
    resources:
      - retinaendpoints
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - retina.sh
    resources:
      - metricsconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - retina.sh
    resources:
      - metricsconfigurations/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - retina.sh
    resources:
      - retinaendpoints/finalizers
    verbs:
      - update
  - apiGroups:
      - retina.sh
    resources:
      - retinaendpoints/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
    - namespaces
    - pods
    - nodes
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
      - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
      - batch
    resources:
    - jobs/status
    verbs:
    - get
  - apiGroups:
    - retina.sh
    resources:
    - captures
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
      - retina.sh
    resources:
    - captures/finalizers
    verbs:
    - update
  - apiGroups:
      - retina.sh
    resources:
    - captures/status
    verbs:
    - get
    - patch
    - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/instance: retina-operator-rolebinding
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/part-of: operator
    app.kubernetes.io/managed-by: kustomize
  name: retina-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: retina-operator-role
subjects:
- kind: ServiceAccount
  name: retina-operator
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: retina-operator-config
  namespace: {{ .Values.namespace }}
data:
  operator-config.yaml: |-
    installCRDs: {{ .Values.operator.installCRDs }}
    enableTelemetry: {{ .Values.enableTelemetry }}
    remoteContext: {{ .Values.remoteContext }}
    captureDebug: {{ .Values.operator.capture.debug }}
    captureJobNumLimit: {{ .Values.operator.capture.jobNumLimit }}
{{- end }}
