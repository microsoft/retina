apiVersion: v1
kind: ServiceAccount
metadata:
  name: kapinger-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kapinger-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["services", "pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kapinger-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kapinger-role
subjects:
  - kind: ServiceAccount
    name: kapinger-sa
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapinger-good
  namespace: default
spec:
  replicas: 10
  selector:
    matchLabels:
      app: kapinger
  template:
    metadata:
      labels:
        app: kapinger
        server: good
    spec:
      serviceAccountName: kapinger-sa
      containers:
        - name: kapinger
          image: acnpublic.azurecr.io/kapinger:20241009.5
          resources:
            limits:
              memory: 20Mi
            requests:
              memory: 20Mi
          env:
            - name: GODEBUG
              value: netdns=go
            - name: TARGET_TYPE
              value: "service"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HTTP_PORT
              value: "8080"
            - name: TCP_PORT
              value: "8085"
            - name: UDP_PORT
              value: "8086"
            - name: BURST_INTERVAL_MS
              value: "500"
            - name: BURST_VOLUME
              value: "1"
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapinger-bad
  namespace: default
spec:
  replicas: 5
  selector:
    matchLabels:
      app: kapinger
  template:
    metadata:
      labels:
        app: kapinger
        server: bad
    spec:
      serviceAccountName: kapinger-sa
      containers:
        - name: kapinger
          image: acnpublic.azurecr.io/kapinger:20241009.5
          resources:
            limits:
              memory: 20Mi
            requests:
              memory: 20Mi
          env:
            - name: TARGET_TYPE
              value: "service"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HTTP_PORT
              value: "8080"
            - name: TCP_PORT
              value: "8085"
            - name: UDP_PORT
              value: "8086"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: kapinger-service
  namespace: default
  labels:
    app: kapinger
spec:
  selector:
    app: kapinger
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
